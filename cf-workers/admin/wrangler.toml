# cf-workers/admin/wrangler.toml
# ============================================
# INPI Admin Worker – Whitelist-frei
# - Hauptziel: Keys im KV "CONFIG" lesen/schreiben (ohne CONFIG_KEYS-Whitelist)
# - UI:        /admin
# - Public:    /public/app-cfg (vom Frontend nutzbar)
# ============================================

name = "admin"
main = "worker.js"                 # WICHTIG: exakt dein neues Admin-UI (ohne Whitelist)
compatibility_date = "2024-12-01"

# Die Routen müssen auf DIESEN Worker zeigen
routes = [
  { pattern = "inpinity.online/admin*",  zone_name = "inpinity.online" },
  { pattern = "inpinity.online/public/*", zone_name = "inpinity.online" }
]

# KV-Bindings
kv_namespaces = [
  # CONFIG = Projekt-Konfiguration (alle Keys hier rein)
  { binding = "CLAIM_CONFIG", id = "a82cb91c589b4b1a8c786807a49fe5f5" }
]

[vars]
# Sichtbarer Name in der Basic-Auth-Aufforderung
ADMIN_REALM   = "INPI Admin"

# Optional: IP-Whitelist (leer = alle IPs erlaubt)
IP_ALLOWLIST  = ""

# Nur Header/Meta-Kram für das UI; hat keinen Einfluss auf /config/*
CRON_BASE     = "https://inpinity.online/cron"
OPS_HMAC_ALGO = "SHA-256"

# ABSICHTLICH NICHT DEFINIERT:
#   CONFIG_KEYS = "..."
# => Keine Whitelist mehr. /admin/config/set & /setmany dürfen JEDEN Key speichern.

# Secret-Variablen (NICHT hier in Klartext!):
#   ADMIN_USER  (Basic-Auth Benutzer)
#   ADMIN_PASS  (Basic-Auth Passwort)
# Die legst du als Secrets:
#   npx wrangler secret put ADMIN_USER
#   npx wrangler secret put ADMIN_PASS